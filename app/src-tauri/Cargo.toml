[package]
name = "apicize"
version = "0.17.1"
description = "Apicize HTTP call testing application"
authors = ["Jason Terando"]
license = "MIT"
repository = ""
default-run = "apicize"
edition = "2021"
rust-version = "1.82"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[build-dependencies]
tauri-build = { version = "2.0.0", features = [] }

[dependencies]
serde_json = "1.0"
serde = { version = "1.0", features = ["derive"] }
apicize_lib = { version = "^0.17.0" }
# apicize_lib = { path = "../../../lib-rust" }
tauri = { version = "2.2.0", features = ["image-png", "unstable"] }
tokio-util = "0.7.11"
tauri-plugin-fs = "2.2.0"
# tauri-plugin-clipboard-manager = "2.1.0"
tauri-plugin-dialog = "2.2.0"
tauri-plugin-window-state = "2.2.0"
tauri-plugin-clipboard = { git = "https://github.com/jasonterando/tauri-plugin-clipboard/", branch = "v2-yarn-friendly" }
env_logger = "0.10.2"
tauri-plugin-log = "2.0.0"
tauri-plugin-single-instance = "2.2.0"
actix-web = "4.9.0"
parking_lot = "0.12.3"
dirs = "6.0.0"
async-trait = "0.1.86"
regex = "1.11.1"
log = "0.4.25"
chrono = "0.4.39"
tauri-plugin-os = "2.2.0"

[features]
# this feature is used for production builds or when `devPath` points to the filesystem and the built-in dev server is disabled.
# If you use cargo directly instead of tauri's cli you can use this feature flag to switch between tauri's `dev` and `build` modes.
# DO NOT REMOVE!!
custom-protocol = [ "tauri/custom-protocol" ]

[profile.release]
panic = "abort" # Strip expensive panic clean-up logic
codegen-units = 1 # Compile crates one after another so the compiler can optimize better
lto = true # Enables link to optimizations
opt-level = "s" # Optimize for binary size
strip = true # Remove debug symbols

[target."cfg(not(any(target_os = \"android\", target_os = \"ios\")))".dependencies]
